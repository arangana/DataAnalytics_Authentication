data5$Garage.Finish + data5$Garage.Cars + data5$Garage.Area + data5$Garage.Qual +
data5$Garage.Cond + data5$Pool.Area + data5$Sale.Type)
data5<-data5[-957, ]
View(data5)
data5 <- subset(data4, select = c(Lot.Area , Street , Lot.Shape , Land.Contour ,
Lot.Config , Land.Slope , Neighborhood , Condition.1 , Condition.2 ,
Bldg.Type , House.Style , Overall.Qual , Overall.Cond , Year.Built ,
Year.Remod.Add , Roof.Matl , Exterior.1st , Mas.Vnr.Type ,
Mas.Vnr.Area , Exter.Qual , Total.Bsmt.SF , X1st.Flr.SF ,
Gr.Liv.Area , TotRms.AbvGrd , Kitchen.Qual , Fireplaces ,
Garage.Finish , Garage.Cars , Garage.Area , Garage.Qual ,
Garage.Cond , Pool.Area , Sale.Type, SalePrice))
View(data5)
data5[957]
data5[957,]
max(data5$Lot.Area)
help(max)
data5[max(data5$Lot.Area),]
data5[957,]
data5[1,]
View(data5)
data5[745, ]
data5 <- subset(data4, select = c(Lot.Area , Street , Lot.Shape , Land.Contour ,
Lot.Config , Land.Slope , Neighborhood , Condition.1 , Condition.2 ,
Bldg.Type , House.Style , Overall.Qual , Overall.Cond , Year.Built ,
Year.Remod.Add , Roof.Matl , Exterior.1st , Mas.Vnr.Type ,
Mas.Vnr.Area , Exter.Qual , Total.Bsmt.SF , X1st.Flr.SF ,
Gr.Liv.Area , TotRms.AbvGrd , Kitchen.Qual , Fireplaces ,
Garage.Finish , Garage.Cars , Garage.Area , Garage.Qual ,
Garage.Cond , Pool.Area , Sale.Type, SalePrice))
data5<-data5[-745, ]
model8 <- lm(SalePrice~.,data = data5)
summary(model8)
plot(data5$SalePrice~data5$Lot.Area)
shiny::runApp('Documents/CMU_Acads/Data Analytics/Project/app')
library("shiny")
library(shiny)
?shiny
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
rm(list = xxx)
rm(list = "xxx")
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
source('~/Documents/CMU_Acads/Data Analytics/Rcodes/rmon.R')
data1<-data5[1, ]
data1
saveData(data1)
saveData(data1)
saveData(data1)
data5
data = 9
saveData(data1)
saveData(data)
gs <- gs_url("https://docs.google.com/spreadsheets/d/1nHRbRtdp5s4NzGHE51K-gQaNQZqArKY7jKC513LocJ8/edit#gid=0", lookup = NULL, visibility = NULL, verbose = TRUE)
source('~/Documents/CMU_Acads/Data Analytics/Rcodes/rmon.R')
testip <- data5[1, ]
gs_add_row(gs, ws = 1, input = testip, verbose = TRUE)
gs_browse(gs, ws= 1)
gs_add_row(gs, ws = 1, input = "this", verbose = TRUE)
gs_add_row(gs, ws = 1, input = "", verbose = TRUE)
View(testip)
write.csv(testip, "testip.csv")
?write.csv
write.csv(testip, file = "/Users/nagarjunsrinivasan/Documents/CMU_Acads/Data Analytics/Rcodes/testip.csv")
gs_upload("/Users/nagarjunsrinivasan/Documents/CMU_Acads/Data Analytics/Rcodes/testip.csv", sheet_title = gs, verbose = TRUE)
gs_upload("/Users/nagarjunsrinivasan/Documents/CMU_Acads/Data Analytics/Rcodes/testip.csv", sheet_title = "responses", verbose = TRUE)
gs<-gs_upload("/Users/nagarjunsrinivasan/Documents/CMU_Acads/Data Analytics/Rcodes/testip.csv",  verbose = TRUE)
gs <- gs_url("https://docs.google.com/spreadsheets/d/1nHRbRtdp5s4NzGHE51K-gQaNQZqArKY7jKC513LocJ8/edit#gid=0", lookup = NULL, visibility = NULL, verbose = TRUE)
gs <- gs_url("https://docs.google.com/spreadsheets/d/1avezQT-LYwiHfbN65AuTWqndaJOVStYToE10AHD9cx4/edit#gid=922404752", lookup = NULL, visibility = NULL, verbose = TRUE)
testip <- data5[2, ]
gs_add_row(gs, ws = 1, input = testip, verbose = TRUE)
gs_add_row(gs, ws = 1, input = testip, verbose = TRUE)
gs <- gs_url("https://docs.google.com/spreadsheets/d/1avezQT-LYwiHfbN65AuTWqndaJOVStYToE10AHD9cx4/edit#gid=922404752", lookup = NULL, visibility = NULL, verbose = TRUE)
library("googlesheets")
gs <- gs_url("https://docs.google.com/spreadsheets/d/1avezQT-LYwiHfbN65AuTWqndaJOVStYToE10AHD9cx4/edit#gid=922404752", lookup = NULL, visibility = NULL, verbose = TRUE)
shiny::runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
View(data5)
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
?observeEvent
?sendCustomMessage
??sendCustomMessage
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
??selectInput
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
?observeEvent
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
shiny::runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
library("ISLR")
data(Default)
str(Default)
summary(Default)
glm.fit = glm(default~balance+income, data=Default,family=binomial())
summary(glm.fit)
?sample
View(Default)
train <- sample(Default, 10000, 2000)
View(train)
train <- sample(10000, 2000)
train <- sample(Default, 2000)
train <- sample(Default, 200)
set.seed(1)
train <- sample(Default, 10000, 2)
View(train)
set.seed(1)
train <- sample(Default, 10000, 5000)
View(train)
set.seed(1)
train <- sample(10000, 5000)
train <- sample(10000, 2)
train=sample(392,196)
set.seed(1)
train <- sample(10000, 2)
?subset
xx <- subset(data = Default, subset = train)
subset(data = Default, subset = train)
subset(Default, subset = train)
glm.fit = glm(default~balance+income, data=Default, subset = train, family=binomial())
summary(glm.fit)
predict(train_fit, Default)[-train]
set.seed(1)
train <- sample(10000, 2000)
train_fit <- glm(default~balance+income, data=Default,subset = train, family=binomial())
summary(train_fit)
predict(train_fit, Default)[-train]
predict(train_fit, newdata = Default)[-train]
predict(train_fit, newdata = Default)
summary(glm.fit)
source('~/Documents/CMU_Acads/Data Analytics/HW4/hw4script.R')
summary(glm.fit)
summary(train_fit)
source('~/Documents/CMU_Acads/Data Analytics/HW4/hw4script.R')
summary(glm.fit)
summary(train_fit)
predict(train_fit, newdata = Default)[-train]
df <- data.frame("x" = c(1,2,3), "y" = c(1,2,3), "z" = c(1,2,3))
df
t <- subset(3,1)
t <- sample(3,1)
t
t <- sample(3,2)
t
set.seed(4)
t <- sample(3,2)
t
tr <- df[t]
tr
tr <- df[t, ]
tr
te <- df[-tr]
te <- df[-t, ]
te
rm(list = c("train_fit", "train", "t", "glm.fit", "tr", "te", "df", "Default"))
library("ISLR")
data(Default)
str(Default)
summary(Default)
glm.fit = glm(default~balance+income, data=Default,family=binomial())
summary(glm.fit)
set.seed(1)
indices <- sample(10000, 8000)
train <- Default[indices, ]
test <- Default[-indices, ]
train_fit <- glm(default~balance+income, data=train, family=binomial())
summary(train_fit)
View(test)
test <- data.frame("balance" = test$balance, "income" = test$income)
pred <- predict(train_fit, newdata = test, type = "response")
contrasts(Default$default)
pred[pred>0.5] <- 1
pred[pred<0.5] <- 0
set.seed(1)
indices <- sample(10000, 8000)
train <- Default[indices, ]
test <- Default[-indices, ]
dd <- test$default
test <- data.frame("balance" = test$balance, "income" = test$income)
train_fit <- glm(default~balance+income, data=train, family=binomial())
summary(train_fit)
pred <- predict(train_fit, newdata = test, type = "response")
pred[pred>0.5] <- 1
pred[pred<0.5] <- 0
check <- data.frame("default" = as.numeric(dd), "prediction" = pred)
View(check)
check <- data.frame("default" = as.numeric(dd) -1, "prediction" = pred)
View(check)
table(check)
mean(check$default!=check$prediction)
set.seed(1)
y=rnorm(100)
x=rnorm(100)
y=x-2*x^2+rnorm (100)
q2 <- data.frame("x" = x, "y" = y)
View(q2)
plot(x~y)
fit1 <- lm(y~x, data = q2)
fit2 <- lm(y~x+I(x^2), data = q3)
fit3 <- lm(y~x+I(x^2)+I(x^3), data = q3)
fit1 <- lm(y~x, data = q2)
fit2 <- lm(y~x+I(x^2), data = q2)
fit3 <- lm(y~x+I(x^2)+I(x^3), data = q2)
fit4 <- lm(y~x+I(x^2)+I(x^3)+I(x^4), data = q2)
View(data5)
shiny::runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
runApp('Documents/CMU_Acads/Data Analytics/Project/app')
fit1 <- glm(y~x, data = q2)
fit2 <- glm(y~x+I(x^2), data = q2)
fit3 <- glm(y~x+I(x^2)+I(x^3), data = q2)
fit4 <- glm(y~x+I(x^2)+I(x^3)+I(x^4), data = q2)
err1 <- cv.glm(q2, fit1)
err1 <- cv.glm(q2, fit1)
library("boot")
err1 <- cv.glm(q2, fit1)
err2 <- cv.glm(q2, fit2)
err3 <- cv.glm(q2, fit3)
err4 <- cv.glm(q2, fit4)
rep(0,3)
rm(list = c("x"))
rm(list = c("x", "y", "train_fit", "pred", "indices", "glm.fit", "fit1", "fit2", "fit3", "fit4", "err1", "err2", "err3", "err4", "dd", "train", "test", "q2", "Default", "check"))
rm(list = c( "y", "train_fit", "pred", "indices", "glm.fit", "fit1", "fit2", "fit3", "fit4", "err1", "err2", "err3", "err4", "dd", "train", "test", "q2", "Default", "check"))
save.image("~/Documents/CMU_Acads/Data Analytics/Project/modeldata.RData")
rm(list=ls())
library("car")
data(Prestige)
str(Prestige)
install.packages("car")
library("car")
data(Prestige)
str(Prestige)
View(Prestige)
fit1 <- lm(income~education+prestige+women, data = Prestige)
summary(fit1)
fit2 <- glm(income~education+prestige+women, data = Prestige)
summary(fit2)
library("boot")
error1 <- cv.glm(Prestige, fit2, K=50)$delta[1]
rmse1 <- sqrt(error1)
error1 <- cv.glm(Prestige, fit2, K=50)
rmse1 <- sqrt(7023988)
error1 <- cv.glm(Prestige, fit2, K=50)$delta[1]
rmse1 <- sqrt(error1)
error1 <- cv.glm(Prestige, fit2, K=50)$delta[1]
rmse1 <- sqrt(error1)
error1 <- cv.glm(Prestige, fit2, K=50)$delta[1]
rmse1 <- sqrt(error1)
error1 <- cv.glm(Prestige, fit2, K=50)$delta[1]
rmse1 <- sqrt(error1)
set.seed(1)
error1 <- cv.glm(Prestige, fit2, K=50)$delta[1]
rmse1 <- sqrt(error1)
set.seed(1)
error1 <- cv.glm(Prestige, fit2, K=50)$delta[1]
rmse1 <- sqrt(error1)
set.seed(1)
error1 <- cv.glm(Prestige, fit2, K=50)$delta[1]
rmse1 <- sqrt(error1)
set.seed(1)
error1 <- cv.glm(Prestige, fit2, K=2)$delta[1]
rmse1 <- sqrt(error1)
set.seed(1)
error1 <- cv.glm(Prestige, fit2, K=10)$delta[1]
rmse1 <- sqrt(error1)
error2 <- cv.glm(Prestige, fit2)$delta[1]
rmse2<- sqrt(error2)
indices <- sample(102, 50)
train <- Prestige[indices, ]
test <- Prestige[-indices, ]
indices <- sample(102, 52)
train <- Prestige[indices, ]
test <- Prestige[-indices, ]
dd <- test$income
test <- data.frame("education" = test$education, "prestige" = test$prestige, "women" = test$women)
train_fit <- glm(income~education+prestige+women, data=train)
pred <- predict(train_fit, newdata = test)
check <- data.frame("true" = dd, "prediction" = pred)
View(check)
rmse <- sqrt(mean((check$true-check$prediction)^2))
set.seed(1)
indices <- sample(102, 50)
test <- Prestige[indices, ]
train <- Prestige[-indices, ]
dd <- test$income
test <- data.frame("education" = test$education, "prestige" = test$prestige, "women" = test$women)
train_fit <- glm(income~education+prestige+women, data=train)
pred <- predict(train_fit, newdata = test)
check <- data.frame("true" = dd, "prediction" = pred)
rmse <- sqrt(mean((check$true-check$prediction)^2))
View(check)
?for
he
help(for loop)
help(for)
help("for loop")
??got
??for
loop
mse = rep(0,50)
for (ii in 1:10){
mse[i] = (check$true[i] - check$prediction[i])^2
}
mse = rep(0,50)
for (ii in 1:50){
mse[i] = (check$true[i] - check$prediction[i])^2
}
mse = rep(0,50)
for (ii in 1:50){
mse[ii] = (check$true[ii] - check$prediction[ii])^2
}
MSE = 0
for (jj in 1:50){
MSE = MSE+mse[jj]
}
testrmse <- sqrt(MSE)
testrmse <- sqrt(MSE)/50
testrmse <- sqrt(MSE)
View(check)
source('~/Desktop/quiz4.R')
pred <- predict(fit2, newdata = test)
check <- data.frame("true" = dd, "prediction" = pred)
rmse <- sqrt(mean((check$true-check$prediction)^2))
mse = rep(0,50)
for (ii in 1:50){
mse[ii] = (check$true[ii] - check$prediction[ii])^2
}
library("MASS")
data("Boston")
str("Boston")
str("Boston")
library("MASS")
data(Boston)
str(Boston)
View(Boston)
plot(Boston$nox~Boston$dis)
fit1 <- lm(mox~poly(dis,3), data = Boston)
summary(fit1)
plot(Boston$nox~Boston$dis, main = "Cubic fit", xlab = "Dis", ylab = "Nox")
fit1 <- lm(mox~poly(dis,3), data = Boston)
summary(fit1)
dislims=range(Boston$dis)
dis.grid=seq(from=agelims[1],to=agelims[2])
preds=predict(fit1,newdata=list(dis=dis.grid),se=TRUE)
plot(Boston$nox~Boston$dis, main = "Cubic fit", xlab = "Dis", ylab = "Nox")
lines(dis.grid,preds$fit,lwd=2,col="blue")
fit1 <- lm(mox~poly(dis,3), data = Boston)
summary(fit1)
dislims=range(Boston$dis)
dis.grid=seq(from=dislims[1],to=dislims[2])
preds=predict(fit1,newdata=list(dis=dis.grid),se=TRUE)
plot(Boston$nox~Boston$dis, main = "Cubic fit", xlab = "Dis", ylab = "Nox")
lines(dis.grid,preds$fit,lwd=2,col="blue")
fit1 <- lm(mox~poly(dis,3), data = Boston)
summary(fit1)
dislims=range(Boston$dis)
dis.grid=seq(from=dislims[1],to=dislims[2])
preds=predict(fit1,newdata=list(dis=dis.grid),se=TRUE)
plot(Boston$nox~Boston$dis)
fit1 <- lm(nox~poly(dis,3), data = Boston)
summary(fit1)
dislims=range(Boston$dis)
dis.grid=seq(from=dislims[1],to=dislims[2])
dist <- data.frame("dis" = dis.grid)
preds=predict(fit1,newdata=dist,se=TRUE)
plot(Boston$nox~Boston$dis, main = "Cubic fit", xlab = "Dis", ylab = "Nox")
lines(dis.grid,preds$fit,lwd=2,col="blue")
rm(list = ls())
source('~/Documents/CMU_Acads/Data Analytics/HW5/hw5r.R')
residuals(summary(fit1))
residuals(fit1)
?residuals
fit1$residuals
?for
??
??for
?
resids <- rep(0,10)
for (ii in 1:10){
fit <- lm(nox~poly(dis,ii), data = Boston)
summary(fit)
preds=predict(fit,newdata=dist,se=TRUE)
plot(Boston$nox~Boston$dis, main = "Fit Order = "+ii, xlab = "Dis", ylab = "Nox")
lines(dis.grid,preds$fit,lwd=2,col="blue")
resids[ii] <- sum(fit$residuals^2)
}
for (ii in 1:10){
fit <- lm(nox~poly(dis,ii), data = Boston)
summary(fit)
preds=predict(fit,newdata=dist,se=TRUE)
plot(Boston$nox~Boston$dis, main = c("Fit Order = ", ii), xlab = "Dis", ylab = "Nox")
lines(dis.grid,preds$fit,lwd=2,col="blue")
resids[ii] <- sum(fit$residuals^2)
}
resids
pow1 <- lm(nox~poly(dis,1), data = Boston)
pow1 <- lm(nox~poly(dis,1), data = Boston)
pow1 <- lm(nox~poly(dis,1), data = Boston)
pow1 <- lm(nox~poly(dis,1), data = Boston)
pow2 <- lm(nox~poly(dis,2), data = Boston)
pow3 <- lm(nox~poly(dis,3), data = Boston)
pow4 <- lm(nox~poly(dis,4), data = Boston)
pow5 <- lm(nox~poly(dis,5), data = Boston)
pow6 <- lm(nox~poly(dis,6), data = Boston)
pow7 <- lm(nox~poly(dis,7), data = Boston)
pow8 <- lm(nox~poly(dis,8), data = Boston)
pow9 <- lm(nox~poly(dis,9), data = Boston)
pow10 <- lm(nox~poly(dis,10), data = Boston)
anova(pow1,pow2,pow3,pow4,pow5,pow6,pow7,pow8,pow9,pow10)
?anova
anova(pow1,pow2,pow3,pow4,pow5,pow6,pow7,pow8,pow9,pow10, print(pretty))
pretty(anova(pow1,pow2,pow3,pow4,pow5,pow6,pow7,pow8,pow9,pow10))
anova(pow1,pow2,pow3,pow4,pow5,pow6,pow7,pow8,pow9,pow10)
spline1 <- lm(nox~bs(dis, knots = c(2,4,6,8)), data = Boston)
pred.spline1=predict(spline1,newdata=dist,se=T)
plot(Boston$nox~Boston$dis, main = "Splines fit (knots = 2,4,6,8)", xlab = "Dis", ylab = "Nox")
lines(dist,pred.spline1$fit,lwd=2)
library(splines)
spline1 <- lm(nox~bs(dis, knots = c(2,4,6,8)), data = Boston)
pred.spline1 <- predict(spline1,newdata=dist,se=T)
plot(Boston$nox~Boston$dis, main = "Splines fit (knots = 2,4,6,8)", xlab = "Dis", ylab = "Nox")
lines(dist,pred.spline1$fit,lwd=2)
pred.spline1$fit
spline1 <- lm(nox~bs(dis, knots = c(2,4,6,8)), data = Boston)
pred.spline1 <- predict(spline1,newdata=dist,se=T)
plot(Boston$nox~Boston$dis, main = "Splines fit (knots = 2,4,6,8)", xlab = "Dis", ylab = "Nox")
lines(dis.grid,pred.spline1$fit,lwd=2)
lines(dis.grid,pred.spline1$fit+2*pred.spline1$se,lty="dashed")
lines(dis.grid,pred.spline1$fit-2*pred.spline1$se,lty="dashed")
spline1 <- lm(nox~bs(dis, knots = c(2,4,6,8)), data = Boston)
pred.spline1 <- predict(spline1,newdata=dist,se=T)
plot(Boston$nox~Boston$dis, main = "Splines fit (knots = 2,4,6,8)", xlab = "Dis", ylab = "Nox")
lines(dis.grid,pred.spline1$fit,lwd=2, col = "blue")
lines(dis.grid,pred.spline1$fit+2*pred.spline1$se,lty="dashed", col = "red")
lines(dis.grid,pred.spline1$fit-2*pred.spline1$se,lty="dashed", col = "red")
spline1 <- lm(nox~bs(dis, knots = c(1,4,6,8)), data = Boston)
pred.spline1 <- predict(spline1,newdata=dist,se=T)
plot(Boston$nox~Boston$dis, main = "Splines fit (knots = 1,4,6,8)", xlab = "Dis", ylab = "Nox")
lines(dis.grid,pred.spline1$fit,lwd=2, col = "blue")
lines(dis.grid,pred.spline1$fit+2*pred.spline1$se,lty="dashed", col = "red")
lines(dis.grid,pred.spline1$fit-2*pred.spline1$se,lty="dashed", col = "red")
spline2 <- lm(nox~ns(dis,df=4),data=Boston)
pred.spline2 <- predict(spline2,newdata=dist,se=T)
plot(Boston$nox~Boston$dis, main = "Splines fit (df = 4))", xlab = "Dis", ylab = "Nox")
lines(dis.grid,pred.spline2$fit,lwd=2, col = "blue")
lines(dis.grid,pred.spline2$fit+2*pred.spline2$se,lty="dashed", col = "red")
lines(dis.grid,pred.spline2$fit-2*pred.spline2$se,lty="dashed", col = "red")
?smooth.spline
source('~/Documents/CMU_Acads/Data Analytics/HW5/hw5r.R')
spline.sm <- smooth.spline(dis,nox,df=4)
spline.sm <- smooth.spline(dis,nox,df=4, data = Boston)
library("ISLR")
data(College)
str(College)
View(College)
set.seed(1)
indices <- sample(777, 230)
train <- College[-indices, ]
test <- College[indices, ]
nullfit <- lm(Outstate~1, data = train)
stepfit <- step(nullfit, scope = .~.)
stepfit <- step(nullfit, scope = .~.+Private+Apps+Accept+
Enroll+Top10perc+Top25perc+
F.Undergrad+P.Undergrad+Room.Board+
Books+Personal+PhD+Terminal+
S.F.Ratio+perc.alumni+Expend+Grad.Rate)
library(shiny); runApp('Documents/CMU_Acads/Data Analytics/Project/update/app/app1.r')
rm(list = ls()])
rm(list = ls())
load("~/Documents/CMU_Acads/Data Analytics/Project/update/app/Untitled.RData")
runApp('Documents/CMU_Acads/Data Analytics/Project/update/app/app1.r')
